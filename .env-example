# LOG_LEVEL: Sets the verbosity of the application's logs.
# Recommended values: "debug" (for development), "info" (for production).
# Options: "debug", "info", "warn", "error"
LOG_LEVEL=debug

# ENV: The operating environment.
# This can be used to enable or disable certain development-only features.
# Recommended values: "dev", "test", "prod"
# DEV makes it so some errors are handled gracefully.
# See line 328 in internal/PoolRetriever.go for example
# As inside of a dev enviroment you might not have access to certain datapoints that match with a devnet
ENV=dev

# AVM_MODE: The execution mode of the AVM.
# CRITICAL: Must be set to "live" for the AVM to broadcast real transactions.
# Any other value will cause the application to halt as a safety measure.
AVM_MODE=live

# Database Configuration (PostgreSQL)
DB_HOST=localhost
DB_PORT=5432
DB_USER=avm_user
DB_PASSWORD=your_secure_password
DB_NAME=avm_database
DB_SSLMODE=disable


# WEB_PORT: The port on which the real-time monitoring dashboard will be served.
WEB_PORT=2001


# CRYPTOCOMPARE_API: Your API key for the CryptoCompare service.
# This is REQUIRED for fetching historical price data needed for volatility calculations.
# Get a free key from: https://min-api.cryptocompare.com/
CRYPTOCOMPARE_API=your_cryptocompare_api_key_here


# AVM_VAULT_ID: The unique identifier of the vault this AVM instance will manage.
AVM_VAULT_ID=5


# KEYRING_BACKEND: The storage backend for your cryptographic keys.
# "test": Insecure, unencrypted, for development only.
# "os": Uses the operating system's native keychain/credential store. Recommended for production.
# "file": Stores keys in an encrypted file, requires a password.
KEYRING_BACKEND=test

# KEYRING_DIR: The directory where the keyring data is stored.
# The tilde (~) will be automatically expanded to your home directory.
KEYRING_DIR="~/.elys/"

# KEYRING_KEY_NAME: The name/alias of the specific key within the keyring
# that will be used to sign and broadcast transactions.
KEYRING_KEY_NAME=validator


# CHAIN_ID: The chain ID of the target Elys Network.
# e.g., "elys-1" or "elysicstestnet-1"
CHAIN_ID=elysicstestnet-1


# GAS_DEFAULT_LIMIT: The fallback gas limit to use for a transaction if
# the on-chain gas simulation fails for any reason.
GAS_DEFAULT_LIMIT=8000000

# GAS_ADJUSTMENT: A multiplier applied to the simulated gas estimate.
# This acts as a safety buffer to prevent "out of gas" errors.
# e.g., 1.3 means the AVM will request 30% more gas than the simulation estimated.
GAS_ADJUSTMENT=1.3

# GAS_PRICE_AMOUNT: The price per unit of gas. This, combined with the gas limit,
# determines the maximum transaction fee.
GAS_PRICE_AMOUNT="0.025"

# GAS_PRICE_DENOM: The denomination of the token used to pay for gas fees.
# On Elys, this is typically "uelys" (micro-elys).
GAS_PRICE_DENOM=uelys


# Network Endpoints Configuration
# NODE_RPC: The RPC endpoint for the Elys node.
# This is used for transaction broadcasting and querying.
NODE_RPC=http://localhost:26657

# NODE_GRPC: The gRPC endpoint for the Elys node.
# This is used for efficient querying of blockchain state.
NODE_GRPC=localhost:9090

# SUPPLY_API: The API endpoint for supply data.
# This provides additional market data for the AVM.
SUPPLY_API=https://supply.testnet.elys.network